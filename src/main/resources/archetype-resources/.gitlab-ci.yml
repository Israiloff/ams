#set( $symbol_dollar = '$' )
stages:
  - build
  - deploy
  - notify

build:
  stage: build
  rules:
    - if: '${symbol_dollar}CI_COMMIT_BRANCH == "qa"'
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  before_script:
    - cp "${symbol_dollar}MAVEN_SETTINGS_XML" "${symbol_dollar}CI_PROJECT_DIR/settings.xml"
    - echo "${symbol_dollar}REGISTRY_CERT" >> "${symbol_dollar}CI_PROJECT_DIR/ca.crt"
  script:
    - mkdir -p /kaniko/.docker
    - echo "${symbol_dollar}REGISTRY_CERT" >> /kaniko/ssl/certs/ca-certificates.crt
    - echo "{\"auths\":{\"${symbol_dollar}{CI_REGISTRY}\":{\"auth\":\"${symbol_dollar}(printf "%s:%s" "${symbol_dollar}{CI_REGISTRY_USER}" "${symbol_dollar}{CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${symbol_dollar}CI_PROJECT_DIR"
      --cache=true
      --dockerfile "${symbol_dollar}CI_PROJECT_DIR/Dockerfile"
      --destination "${symbol_dollar}CI_REGISTRY_IMAGE:${symbol_dollar}CI_COMMIT_TAG"
      --destination "${symbol_dollar}CI_REGISTRY_IMAGE:${symbol_dollar}CI_COMMIT_SHA"
  tags:
    - "docker"

deploy-to-test:
  stage: deploy
  rules:
    - if: '${symbol_dollar}CI_COMMIT_BRANCH == "qa"'
  image:
    name: ${symbol_dollar}REGISTRY/devops/deploy-tools
  before_script:
    - env
    - eval ${symbol_dollar}(ssh-agent -s)
    - echo "${symbol_dollar}ANSIBLE_SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan ${symbol_dollar}ANSIBLE_SERVER >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh ansible@${symbol_dollar}ANSIBLE_SERVER "ansible-playbook /etc/ansible/playbooks/deploy/test/"${symbol_dollar}CI_PROJECT_NAMESPACE"/"${symbol_dollar}CI_PROJECT_NAME".yml --extra-vars 'CI_REGISTRY_IMAGE=${symbol_dollar}CI_REGISTRY_IMAGE CI_COMMIT_SHA=${symbol_dollar}CI_COMMIT_SHA RELEASE_VERSION=${symbol_dollar}CI_COMMIT_SHA'"
  tags:
    - "docker"
  
  # deploy-to-stage:
  #   stage: deploy
  #   rules:
  #     - if: '${symbol_dollar}CI_COMMIT_BRANCH == "master"'
  #   image:
  #     name: ${symbol_dollar}REGISTRY/devops/deploy-tools
  #   before_script:
  #     - eval ${symbol_dollar}(ssh-agent -s)
  #     - echo "${symbol_dollar}SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  #     - mkdir -p ~/.ssh
  #     - chmod 700 ~/.ssh
  #     - ssh-keyscan ${symbol_dollar}ANSIBLE_SERVER >> ~/.ssh/known_hosts
  #     - chmod 644 ~/.ssh/known_hosts
  #   script:
  #     - ssh ${symbol_dollar}USER_DEPLOY@${symbol_dollar}ANSIBLE_SERVER "sudo -H -u ansible bash -c 'ansible-playbook /etc/ansible/playbooks/deploy/prod/mobile-backend/"${symbol_dollar}CI_PROJECT_NAME".yml --extra-vars RELEASE_VERSION=${symbol_dollar}CI_COMMIT_TAG'"
  #   tags:
  #     - "docker"
  #   when: manual

.notify: &notify # https://ifedyukin.ru/blog/2018/telegram_ci
  - TIME="10"
  - TEXT="Deploy status:${symbol_dollar}STATUS_TEXT %0A%0A Project:+${symbol_dollar}CI_PROJECT_NAME%0A User:+${symbol_dollar}GITLAB_USER_LOGIN%0A Branch:+${symbol_dollar}CI_COMMIT_REF_SLUG%0A Message:+${symbol_dollar}CI_COMMIT_MESSAGE%0A Project URL:${symbol_dollar}PROJECT_URL%0A Pipeline URL:+${symbol_dollar}CI_PROJECT_URL/pipelines/${symbol_dollar}CI_PIPELINE_ID/"
  - curl -s --max-time ${symbol_dollar}TIME -d "chat_id=${symbol_dollar}TELEGRAM_GROUP_ID&disable_web_page_preview=1&text=${symbol_dollar}TEXT" ${symbol_dollar}TELEGRAM_URL > /dev/null

# Notify SUCCESS only if on success and commit message do not contains (skip-ci OR skip-deploy OR skip-restart)
notify-deploy-to-qa-success:
  stage: notify
  rules:
    - if: '${symbol_dollar}CI_COMMIT_BRANCH == "qa"'
  image:
    name: ${symbol_dollar}REGISTRY/devops/deploy-tools
  script:
    - STATUS_TEXT="‚úÖDeploy to qa success‚úÖ"
    - *notify
  when: on_success #deploy OK
  tags:
    - "docker"

notify-deploy-to-qa-error:
  stage: notify
  rules:
    - if: '${symbol_dollar}CI_COMMIT_BRANCH == "qa"'
  image:
    name: ${symbol_dollar}REGISTRY/devops/deploy-tools
  script:
    - STATUS_TEXT="‚ùåüò°ü§¶ü§¶‚ùå"
    - *notify
  when: on_failure #deploy failed
  tags:
    - "docker"